name: Process New Movie Issue

on:
  issues:
    types: [opened]

jobs:
  check-duplicate:
    runs-on: ubuntu-latest
    steps:
      - name: Check for duplicate issues
        id: check_duplicate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run |
          echo "test"

# jobs:
#   check-duplicate:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check for duplicate issues
#         id: check_duplicate
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#         run: |
#           # Get the issue title (IMDb ID)
#           ISSUE_TITLE="${{ github.event.issue.title }}"
          
#           # Search for open issues with the same title (IMDb ID)
#           RESPONSE=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
#             "https://api.github.com/search/issues?q=repo:${{ github.repository }}+in:title+state:open+${ISSUE_TITLE}")
          
#           # Count the issues found with the same title
#           MATCHING_ISSUES=$(echo "$RESPONSE" | jq '.total_count')
          
#           # Determine if thereâ€™s more than one matching issue
#           if [ "$MATCHING_ISSUES" -gt 1 ]; then
#             echo "Duplicate issue found"
#             echo "::set-output name=duplicate_found::true"
#           else
#             echo "No duplicate issue found"
#             echo "::set-output name=duplicate_found::false"
#           fi

#       - name: Close duplicate issue
#         if: steps.check_duplicate.outputs.duplicate_found == 'true'
#         uses: actions-ecosystem/action-close-issue@v1
#         with:
#           issue-number: ${{ github.event.issue.number }}
#           github-token: ${{ secrets.GITHUB_TOKEN }}
#           close-message: "This issue is a duplicate of an existing issue with the same IMDb ID and has been closed."

#       - name: Process unique issue
#         if: steps.check_duplicate.outputs.duplicate_found == 'false'
#         run: |
#           echo "Processing movie data for unique issue..."
#           # Place your movie processing logic here
